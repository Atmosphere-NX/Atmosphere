/*
 * Copyright (c) 2018-2020 Atmosph√®re-NX
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "reg_util.h"

namespace t210 {

    const struct XUSB_PADCTL {
        static const uintptr_t base_addr = 0x7009f000;
        using Peripheral = XUSB_PADCTL;

        BEGIN_DEFINE_REGISTER(USB2_PAD_MUX_0, uint32_t, 0x4)
            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(USB2_OTG_PAD_PORT0, 0, 1)
                DEFINE_RW_SYMBOLIC_VALUE(SNPS, 0)
                DEFINE_RW_SYMBOLIC_VALUE(XUSB, 1)
                DEFINE_RW_SYMBOLIC_VALUE(UART, 2)
            END_DEFINE_SYMBOLIC_FIELD(USB2_OTG_PAD_PORT0)

            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(USB2_BIAS_PAD, 18, 19)
                DEFINE_RW_SYMBOLIC_VALUE(SNPS, 0)
                DEFINE_RW_SYMBOLIC_VALUE(XUSB, 1)
                DEFINE_RW_SYMBOLIC_VALUE(UART, 2)
            END_DEFINE_SYMBOLIC_FIELD(USB2_BIAS_PAD)
        END_DEFINE_REGISTER(USB2_PAD_MUX_0)

        BEGIN_DEFINE_REGISTER(USB2_PORT_CAP_0, uint32_t, 0x8)
            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(PORT0_CAP, 0, 1)
                DEFINE_RW_SYMBOLIC_VALUE(Disabled, 0)
                DEFINE_RW_SYMBOLIC_VALUE(HostOnly, 1)
                DEFINE_RW_SYMBOLIC_VALUE(DeviceOnly, 2)
                DEFINE_RW_SYMBOLIC_VALUE(OtgCap, 3)
            END_DEFINE_SYMBOLIC_FIELD(PORT0_CAP)
        END_DEFINE_REGISTER(USB2_PORT_CAP_0)

        BEGIN_DEFINE_REGISTER(SS_PORT_MAP_0, uint32_t, 0x14)
            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(PORT0_MAP, 0, 3)
                DEFINE_RW_SYMBOLIC_VALUE(USB2Port0, 0)
                DEFINE_RW_SYMBOLIC_VALUE(USB2Port1, 1)
                DEFINE_RW_SYMBOLIC_VALUE(USB2Port2, 2)
                DEFINE_RW_SYMBOLIC_VALUE(USB2Port3, 3)
                DEFINE_RW_SYMBOLIC_VALUE(InitDisabled, 7)
            END_DEFINE_SYMBOLIC_FIELD(PORT0_MAP)
        END_DEFINE_REGISTER(SS_PORT_MAP_0)

        BEGIN_DEFINE_REGISTER(ELPG_PROGRAM_0_0, uint32_t, 0x20)
        END_DEFINE_REGISTER(ELPG_PROGRAM_0_0)

        BEGIN_DEFINE_REGISTER(ELPG_PROGRAM_1_0, uint32_t, 0x24)
        END_DEFINE_REGISTER(ELPG_PROGRAM_1_0)

        BEGIN_DEFINE_REGISTER(USB2_BATTERY_CHRG_OTGPAD0_CTL0_0, uint32_t, 0x80)
            DEFINE_RW_FIELD(GENERATE_SRP, 31)
            DEFINE_RW_FIELD(SRP_INTR_EN, 30)
            DEFINE_RW_FIELD(SRP_DETECTED, 29)
            DEFINE_RW_FIELD(SRP_DETECT_EN, 28)
            DEFINE_RW_FIELD(DCD_INTR_EN, 27)
            DEFINE_RW_FIELD(DCD_DETECTED, 26)
            DEFINE_RW_FIELD(ZIN_FILTER_EN, 25)
            DEFINE_RW_FIELD(ZIN_CHNG_INTR_EN, 24)
            DEFINE_RW_FIELD(ZIN_ST_CHNG, 23)
            DEFINE_RO_FIELD(ZIN, 22)
            DEFINE_RW_FIELD(ZIP_FILTER_EN, 21)
            DEFINE_RW_FIELD(ZIP_CHNG_INTER_EN, 20)
            DEFINE_RW_FIELD(ZIP_ST_CHNG, 19)
            DEFINE_RO_FIELD(ZIP, 18)
            DEFINE_RW_FIELD(OP_I_SRC_EN, 13)
            DEFINE_RW_FIELD(ON_SRC_EN, 12)
            DEFINE_RW_FIELD(ON_SINK_EN, 11)
            DEFINE_RW_FIELD(OP_SRV_EN, 10)
            DEFINE_RW_FIELD(OP_SINK_EN, 9)
            DEFINE_RW_FIELD(VDAT_DET_FILTER_EN, 8)
            DEFINE_RW_FIELD(VDAT_DET_CHNG_INTER_EN, 7)
            DEFINE_RW_FIELD(VDAT_DET_ST_CHNG, 6)
            DEFINE_RO_FIELD(VDAT_DET, 5)
            DEFINE_RW_FIELD(VDCD_DET_FILTER_EN, 4)
            DEFINE_RW_FIELD(VDCD_DET_CHNG_INTR_EN, 3)
            DEFINE_RW_FIELD(VDCD_DET_ST_CHNG, 2)
            DEFINE_RO_FIELD(VDCD_DET, 1)
            DEFINE_RW_FIELD(PD_CHG, 0)
        END_DEFINE_REGISTER(USB2_BATTERY_CHRG_OTGPAD0_CTL0_0)

        BEGIN_DEFINE_REGISTER(USB2_BATTERY_CHRG_OTGPAD0_CTL1_0, uint32_t, 0x84)
            DEFINE_RW_FIELD(USBON_RPU_OVRD_VAL, 23)
            DEFINE_RW_FIELD(USBON_RPU_OVRD, 22)
            DEFINE_RW_FIELD(USBON_RPD_OVRD_VAL, 21)
            DEFINE_RW_FIELD(USBON_RPD_OVRD, 20)
            DEFINE_RW_FIELD(USBOP_RPU_OVRD_VAL, 19)
            DEFINE_RW_FIELD(USBOP_RPU_OVRD, 18)
            DEFINE_RW_FIELD(USBOP_RPD_OVRD_VAL, 17)
            DEFINE_RW_FIELD(USBOP_RPD_OVRD, 16)
            DEFINE_RW_FIELD(VREG_DYN_DLY, 9, 10)
            DEFINE_RW_FIELD(VREG_LEV, 7, 8)
            DEFINE_RW_FIELD(VREG_FIX18, 6)
            DEFINE_RW_FIELD(DIV_DET_EN, 4)
            DEFINE_RO_FIELD(VOP_DIV2P7_DET, 3)
            DEFINE_RO_FIELD(VOP_DIV2P0_DET, 2)
            DEFINE_RO_FIELD(VON_DIV2P7_DET, 1)
            DEFINE_RO_FIELD(VON_DIV2P0_DET, 0)
        END_DEFINE_REGISTER(USB2_BATTERY_CHRG_OTGPAD0_CTL1_0)
        
        BEGIN_DEFINE_REGISTER(USB2_OTG_PAD0_CTL_0_0, uint32_t, 0x88)
            DEFINE_RW_FIELD(PD_ZI, 29)
            DEFINE_RW_FIELD(PD2_OVRD_EN, 28)
            DEFINE_RW_FIELD(PD2, 27)
            DEFINE_RW_FIELD(PD, 26)
            DEFINE_RW_FIELD(TERM_SEL, 25)
            DEFINE_RW_FIELD(LS_FSLEW, 21, 24)
            DEFINE_RW_FIELD(LS_RSLEW, 17, 20)
            DEFINE_RW_FIELD(FS_FSLEW, 13, 16)
            DEFINE_RW_FIELD(FS_RSLEW, 9, 12)
            DEFINE_RW_FIELD(HS_SLEW, 6, 8)
            DEFINE_RW_FIELD(HS_CURR_LEVEL, 0, 5)
        END_DEFINE_REGISTER(USB2_OTG_PAD0_CTL_0_0)

        BEGIN_DEFINE_REGISTER(USB2_OTG_PAD0_CTL_1_0, uint32_t, 0x8c)
            DEFINE_RW_FIELD(RPD_CTRL, 26, 30)
            DEFINE_RO_FIELD(RPU_STATUS_HIGH, 25)
            DEFINE_RW_FIELD(RPU_SWITCH_LOW, 24)
            DEFINE_RW_FIELD(RPU_SWITCH_OVRD, 23)
            DEFINE_RW_FIELD(HS_LOOPBACK_OVRD_VAL, 22)
            DEFINE_RW_FIELD(HS_LOOPBACK_OVRD_EN, 21)
            DEFINE_RW_FIELD(PTERM_RANGE_ADJ, 17, 20)
            DEFINE_RW_FIELD(PD_DISC_OVRD_VAL, 16)
            DEFINE_RW_FIELD(PD_CHRP_OVRD_VAL, 15)
            DEFINE_RW_FIELD(RPU_RANGE_ADJ, 13, 14)
            DEFINE_RW_FIELD(HS_COUP_EN, 11, 12)
            DEFINE_RW_FIELD(SPARE, 7, 10)
            DEFINE_RW_FIELD(TERM_RANGE_ADJ, 3, 6)
            DEFINE_RW_FIELD(PD_DR, 2)
            DEFINE_RW_FIELD(PD_DISC_OVRD, 1)
            DEFINE_RW_FIELD(PD_CHRP_OVRD, 0)
        END_DEFINE_REGISTER(USB2_OTG_PAD0_CTL_1_0)

        BEGIN_DEFINE_REGISTER(USB2_BIAS_PAD_CTL_0_0, uint32_t, 0x284)
            DEFINE_RW_FIELD(TRK_POWER_ENA, 29)
            DEFINE_RW_FIELD(SPARE, 25, 28)
            DEFINE_RW_FIELD(CHG_DIV, 21, 24)
            DEFINE_RW_FIELD(TEMP_COEF, 18, 20)
            DEFINE_RW_FIELD(VREF_CTRL, 15, 17)
            DEFINE_RW_FIELD(ADJRPU, 12, 14)
            DEFINE_RW_FIELD(PD, 11)
            DEFINE_RW_FIELD(TERM_OFFSET, 8, 10)
            DEFINE_RW_FIELD(HS_CHIRP_LEVEL, 6, 7)
            DEFINE_RW_FIELD(HS_DISCON_LEVEL, 3, 5)
            DEFINE_RW_FIELD(HS_SQUELCH_LEVEL, 0, 2)
        END_DEFINE_REGISTER(USB2_BIAS_PAD_CTL_0_0)

        BEGIN_DEFINE_REGISTER(USB2_BIAS_PAD_CTL_1_0, uint32_t, 0x288)
            DEFINE_RW_FIELD(FORCE_TRK_CLK_EN, 30)
            DEFINE_RW_FIELD(TRK_SW_OVRF, 29)
            DEFINE_RO_FIELD(TRK_DONE, 28)
            DEFINE_RW_FIELD(TRK_START, 27)
            DEFINE_RW_FIELD(PD_TRK, 26)
            DEFINE_RW_FIELD(TRK_DONE_RESET_TIMER, 19, 25)
            DEFINE_RW_FIELD(TRK_START_TIMER, 12, 18)
            DEFINE_RO_FIELD(PCTRL, 6, 11)
            DEFINE_RO_FIELD(TCTRL, 0, 5)
        END_DEFINE_REGISTER(USB2_BIAS_PAD_CTL_1_0)

        BEGIN_DEFINE_REGISTER(USB2_VBUS_ID_0, uint32_t, 0xc60)
            DEFINE_RW_FIELD(VBUS_WAKEUP_CHNG_INTR_EN, 24)
            DEFINE_RW_FIELD(VBUS_WAKEUP_ST_CHNG, 23)
            DEFINE_RO_FIELD(VBUS_WAKEUP, 22)
            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(ID_OVERRIDE, 18, 21)
                DEFINE_RW_SYMBOLIC_VALUE(GND, 0)
                DEFINE_RW_SYMBOLIC_VALUE(A, 4)
                DEFINE_RW_SYMBOLIC_VALUE(B, 2)
                DEFINE_RW_SYMBOLIC_VALUE(C, 1)
                DEFINE_RW_SYMBOLIC_VALUE(FLOAT, 8)
            END_DEFINE_SYMBOLIC_FIELD(ID_OVERRIDE)
            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(ID_SOURCE_SELECT, 16, 17)
                DEFINE_RW_SYMBOLIC_VALUE(VGPIO, 0)
                DEFINE_RW_SYMBOLIC_VALUE(OVERRIDE, 1)
            END_DEFINE_SYMBOLIC_FIELD(ID_SOURCE_SELECT)
            DEFINE_RW_FIELD(VBUS_WAKEUP_OVERRIDE, 15)
            DEFINE_RW_FIELD(VBUS_OVERRIDE, 14)
            BEGIN_DEFINE_RW_SYMBOLIC_FIELD(VBUS_SOURCE_SELECT, 12, 13)
                DEFINE_RW_SYMBOLIC_VALUE(VGPIO, 0)
                DEFINE_RW_SYMBOLIC_VALUE(OVERRIDE, 1)
            END_DEFINE_SYMBOLIC_FIELD(VBUS_SOURCE_SELECT)
            DEFINE_RW_FIELD(IDDIG_CHNG_INTR_EN, 11)
            DEFINE_RW_FIELD(IDDIG_ST_CHNG, 10)
            DEFINE_RO_FIELD(IDDIG_C, 9)
            DEFINE_RO_FIELD(IDDIG_B, 8)
            DEFINE_RO_FIELD(IDDIG_A, 7)
            DEFINE_RO_FIELD(IDDIG, 6)
            DEFINE_RW_FIELD(VBUS_VALID_CHNG_INTR_EN, 5)
            DEFINE_RW_FIELD(VBUS_VALID_ST_CHNG, 4)
            DEFINE_RO_FIELD(VBUS_VALID, 3)
            DEFINE_RW_FIELD(OTG_VBUS_SESS_VLD_CHNG_INTR_EN, 2)
            DEFINE_RW_FIELD(OTG_VBUS_SESS_VLD_ST_CHNG, 1)
            DEFINE_RO_FIELD(OTG_VBUS_SESS_VLD, 0)
        END_DEFINE_REGISTER(USB2_VBUS_ID_0)
    } XUSB_PADCTL;
    
} // namespace t210
