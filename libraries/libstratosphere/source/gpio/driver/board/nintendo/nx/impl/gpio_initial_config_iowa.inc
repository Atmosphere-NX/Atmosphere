/*
 * Copyright (c) Atmosph√®re-NX
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by gpio_pad_gen.py, do not edit manually. */

constexpr inline const GpioInitialConfig InitialGpioConfigsIowa[] = {
    { DeviceCode_RamCode3,           Direction_Input,  GpioValue_High },
    { DeviceCode_GameCardReset,      Direction_Output, GpioValue_Low  },
    { DeviceCode_CodecAlert,         Direction_Input,  GpioValue_Low  },
    { DeviceCode_PowSdEn,            Direction_Output, GpioValue_Low  },
    { DeviceCode_ExtConWakeS,        Direction_Input,  GpioValue_Low  },
    { DeviceCode_GameCardCd,         Direction_Input,  GpioValue_High },
    { DeviceCode_DebugControllerDet, Direction_Input,  GpioValue_Low  },
    { DeviceCode_BattChgStatus,      Direction_Input,  GpioValue_Low  },
    { DeviceCode_BattChgEnableN,     Direction_Output, GpioValue_Low  },
    { DeviceCode_FanTach,            Direction_Input,  GpioValue_Low  },
    { DeviceCode_Vdd50AEn,           Direction_Output, GpioValue_Low  },
    { DeviceCode_SdevCoaxSel1,       Direction_Input,  GpioValue_Low  },
    { DeviceCode_ProdType0,          Direction_Input,  GpioValue_Low  },
    { DeviceCode_ProdType1,          Direction_Input,  GpioValue_Low  },
    { DeviceCode_ProdType2,          Direction_Input,  GpioValue_Low  },
    { DeviceCode_ProdType3,          Direction_Input,  GpioValue_Low  },
    { DeviceCode_Vdd5V3En,           Direction_Output, GpioValue_Low  },
    { DeviceCode_TempAlert,          Direction_Input,  GpioValue_High },
    { DeviceCode_MotionInt,          Direction_Input,  GpioValue_Low  },
    { DeviceCode_CodecHpDetIrq,      Direction_Input,  GpioValue_Low  },
    { DeviceCode_TpIrq,              Direction_Input,  GpioValue_High },
    { DeviceCode_ButtonSleep2,       Direction_Input,  GpioValue_Low  },
    { DeviceCode_ButtonVolUp,        Direction_Input,  GpioValue_High },
    { DeviceCode_ButtonVolDn,        Direction_Input,  GpioValue_High },
    { DeviceCode_BattMgicIrq,        Direction_Input,  GpioValue_Low  },
    { DeviceCode_RecoveryKey,        Direction_Input,  GpioValue_Low  },
    { DeviceCode_PowLcdBlEn,         Direction_Output, GpioValue_Low  },
    { DeviceCode_LcdReset,           Direction_Output, GpioValue_Low  },
    { DeviceCode_PdRstN,             Direction_Output, GpioValue_Low  },
    { DeviceCode_Bq24190Irq,         Direction_Input,  GpioValue_Low  },
    { DeviceCode_SdCd,               Direction_Input,  GpioValue_High },
    { DeviceCode_SdevCoaxSel0,       Direction_Input,  GpioValue_Low  },
    { DeviceCode_SdWp,               Direction_Input,  GpioValue_High },
    { DeviceCode_CodecLdoEnTemp,     Direction_Output, GpioValue_Low  },
    { DeviceCode_OtgFet1ForSdev,     Direction_Output, GpioValue_Low  },
    { DeviceCode_TpReset,            Direction_Output, GpioValue_Low  },
    { DeviceCode_ExtconDetU,         Direction_Input,  GpioValue_Low  },
    { DeviceCode_BtGpio2,            Direction_Input,  GpioValue_Low  },
    { DeviceCode_BtGpio3,            Direction_Input,  GpioValue_Low  },
    { DeviceCode_BtGpio4,            Direction_Input,  GpioValue_Low  },
    { DeviceCode_ExtconChgU,         Direction_Output, GpioValue_Low  },
    { DeviceCode_CradleIrq,          Direction_Input,  GpioValue_High },
    { DeviceCode_PdVconnEn,          Direction_Output, GpioValue_Low  },
    { DeviceCode_PowVcpuInt,         Direction_Input,  GpioValue_High },
    { DeviceCode_OtgFet2ForSdev,     Direction_Output, GpioValue_Low  },
    { DeviceCode_ExtconDetS,         Direction_Input,  GpioValue_Low  },
    { DeviceCode_WifiRfDisable,      Direction_Output, GpioValue_Low  },
    { DeviceCode_WifiReset,          Direction_Output, GpioValue_Low  },
    { DeviceCode_WifiWakeHost,       Direction_Input,  GpioValue_Low  },
    { DeviceCode_ApWakeBt,           Direction_Output, GpioValue_Low  },
    { DeviceCode_BtRst,              Direction_Output, GpioValue_Low  },
    { DeviceCode_BtWakeAp,           Direction_Input,  GpioValue_Low  },
    { DeviceCode_ExtConWakeU,        Direction_Input,  GpioValue_Low  },
    { DeviceCode_BtGpio5,            Direction_Output, GpioValue_Low  },
    { DeviceCode_PowLcdVddPEn,       Direction_Output, GpioValue_Low  },
    { DeviceCode_PowLcdVddNEn,       Direction_Output, GpioValue_Low  },
    { DeviceCode_RamCode2,           Direction_Input,  GpioValue_High },
    { DeviceCode_ExtconChgS,         Direction_Output, GpioValue_Low  },
    { DeviceCode_Vdd50BEn,           Direction_Output, GpioValue_Low  },
};

constexpr inline size_t NumInitialGpioConfigsIowa = util::size(InitialGpioConfigsIowa);
